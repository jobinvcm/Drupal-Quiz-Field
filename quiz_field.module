<?php
/*
 * Implements hook_field_info()
 */
function quiz_field_field_info() {
    return array(
        'quiz_field' => array(
            'label' => t('Quiz PTE'),
            'description' => t('Adding questions to PTE'),
            'instance_settings' => array('text_processing' => 0),
            'default_widget' => 'read_aloud_field',
            'default_formatter' => 'read_aloud_formatter',
        ),

    );
}

/*
 * Implements hook_field_schema()
 */

/*
 * Implements hook_field_validate()
 */

/*
 * Implements hook_field_is_empty()
 */

/*
 * Implements hook_field_formatter_info()
 */
function hook_field_formatter_info() {
    return array(
        'read_aloud_formatter' => array(
            'label' => t('Read Aloud'),
            'field types' => array('quiz_field'),
        ),
        'repeat_sentence_formatter' => array(
            'label' => t('Repeat Sentence'),
            'field types' => array('quiz_field'),
        ),
    );
}

/*
 * Implements hook_field_formatter_view()
 */
function hook_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
    $element = array();
    $settings = $display['settings'];

    switch ($display['type']) {
        case 'read_loud_formatter':
            // Common case: each value is displayed individually in a sub-element
            // keyed by delta. The field.tpl.php template specifies the markup
            // wrapping each value.
            foreach ($items as $delta => $item) {
                $element[$delta] = array('#markup' => $item['value']);
            }
            break;

        case 'repeat_sentence_formatter':
            // More elaborate formatters can defer to a theme function for easier
            // customization.
            foreach ($items as $delta => $item) {
                $element[$delta] = array('#markup' => $item['value']);
                );
            }
            break;
    }

    return $element;
}

/*
 * Implemetns hook_field_widget_info()
 */

/*
 * Implements hook_field_widget_form()
 */